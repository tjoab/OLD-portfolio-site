{
    "componentChunkName": "component---node-modules-gatsby-theme-portfolio-minimal-src-templates-article-index-tsx",
    "path": "/what-is-a-cryptocurrency/",
    "result": {"pageContext":{"article":{"banner":{"alt":"Blockchain","caption":"","src":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='660'%20height='400'%20viewBox='0%200%20660%20400'%20preserveAspectRatio='none'%3e%3cpath%20d='M108%20152l-24%2011c-6%204-6%206-6%2039%200%2031%200%2031%202%2033%203%203%2046%2022%2053%2024%204%200%2051-20%2055-24%202-2%202-2%202-34l-1-35c-2-3-50-24-55-24l-26%2010m197%200c-16%207-25%2011-26%2013l-3%203-1%2033%201%2034c2%202%2052%2024%2055%2024%202%200%2051-21%2053-23%203-3%203-68%200-71-2-2-50-23-54-23l-25%2010m196%200c-25%2011-28%2013-29%2020a511%20511%200%20002%2064c2%202%2050%2023%2053%2023%204%200%2052-21%2054-24%202-2%202-4%202-34l-1-35c-2-2-6-4-27-13l-28-11-26%2010m-193%204l-22%2010c-1%201%2044%2020%2046%2020a1059%201059%200%200043-21%20860%20860%200%2001-34-14l-11-5-22%2010m-181-7l-22%2010-17%207%2023%2010%2023%2010%2023-10%2022-10c-2-2-44-19-45-19l-7%202m153%2052v32l22%209%2024%2011c2%200%202-2%202-31v-31l-16-7-24-10-8-4v31m77-21l-23%2011-1%2031%201%2031%2024-11%2023-9v-63l-24%2010M84%20202v31l16%207%2023%2010%208%203v-62l-22-10-23-10c-2%200-2%202-2%2031m127-9c-6%206-2%2014%208%2016l6-1c1-2%202-2%204%200%204%203%2019%203%2022-1%203-3%204-8%201-12-2-3-13-6-15-3%200%202-1%202-3%200s-4-2-11-2c-9%200-9%200-12%203m197%200c-8%207%200%2017%2011%2016%204-1%203-4-1-3-8%201-13-7-8-11%203-3%2017-3%2019%200%202%202%202%205%201%208s1%204%203%201l1-6-1-4h6c8%201%2012%206%207%2011-3%203-17%203-20%200-2-2-2-3%200-9%201-3-2-2-4%201-1%204-1%207%202%2011%204%204%2020%203%2024-1%206-6%202-15-8-16l-7%201c0%202%200%202-2%200-4-3-20-3-23%201m-195%202c-5%205-1%2010%207%2011h6l-1-4%201-6c2-3%204-2%203%201-2%203-1%207%201%208%203%203%2017%203%2019%200%205-5%200-11-9-11-3%200-3%200-2%204%200%203%200%204-2%206-2%203-4%202-2-2%203-6%200-9-11-9-7%200-8%200-10%202'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/static/d82b44f85d22ba60115341563cc9a84b/bc51f/bc.png","srcSet":"/static/d82b44f85d22ba60115341563cc9a84b/41200/bc.png 165w,\n/static/d82b44f85d22ba60115341563cc9a84b/f979a/bc.png 330w,\n/static/d82b44f85d22ba60115341563cc9a84b/bc51f/bc.png 660w","sizes":"(min-width: 660px) 660px, 100vw"},"sources":[{"srcSet":"/static/d82b44f85d22ba60115341563cc9a84b/322ad/bc.webp 165w,\n/static/d82b44f85d22ba60115341563cc9a84b/de3b3/bc.webp 330w,\n/static/d82b44f85d22ba60115341563cc9a84b/2b2b5/bc.webp 660w","type":"image/webp","sizes":"(min-width: 660px) 660px, 100vw"}]},"width":660,"height":400}}}},"body":"<p>At this point in time, most people have heard of crypto currencies, but what exactly are they? Why did they come to be? What does it mean to have a Bitcoin? Well before we delve into these topics, I think we should naturally motivate them with an example because at the end of the day, the technical details underlying bitcoin/cryptocurrencies were derived from handling some pretty common problems!</p>\n<h2>A Basic System</h2>\n<p>Say that you wanted to keep track of payments between you and some of your friends. You could use a communal ledger and update it. For this system to work however, you need to trust your friends. But, if you can bring in a few <u><strong>cryptographic</strong></u> tools, you can actually create a system that circumvents the need for trust altogether! A system like this is called a cryptocurrency. Bitcoin was the first implemented example of a cryptocurrency, and now thousands if not hundreds of thousands have followed suit.</p>\n<p>But to start our motivating example, let's forget about cryptocurrencies for the time being.\nWe will consider some basic tools: <u><strong>ledgers and digital signatures</strong></u>. If you and your friends exchange money pretty frequently, paying your share of the dinner bill and such, it can be inconvenient to exchange cash all the time. Instead, you may keep a communal ledger to record the supposed transactions then settle with real money some time in the future.</p>\n<ul>\n<li>TJ pays George $20.00</li>\n<li>George pays Quinn $40.00</li>\n<li>etc.</li>\n</ul>\n<p>This ledger would be public and accessible to everyone, like on a website where you can go and add a new transaction. A glaring issue with this idea is that anyone can add a line. What is preventing me from adding <u><em>George pays TJ $1000</em></u> without George approving? Are we just blindly trusting that all the transactions posted by the sender are what they meant them to be?\nThis is where we introduce the first bit of cryptography: digital signatures. As with real signatures, the idea here is for George to add <em>something</em> to the transaction that proves they have seen it and approved of it. It also needs to be really difficult for someone to “forge” this signature. At first this seems impossible. At its root, a digital signature is just some string of bits, 0s and 1s, so you can just copy and paste them right? How are forgeries prevented?</p>\n<h2>Keys and Key Validation</h2>\n<p>The way this works is that everyone generates what’s called a <u><strong>public key/secret key pair</strong></u>, each of which looks like some string of bits. As the names suggest, the secret key is something you should keep to yourself. In the real world, your real signature looks the same no matter what. But a digital signature actually changes. Commonly, these signatures look like a string of 256 bits, i.e. a combination of 0s and 1s that is 256 numbers in length. Altering the message intended to be signed completely changes the “look” of your digital signature, and detecting the forgery becomes apparent.</p>\n<p>More technically, your digital signature is created by some function which takes in two inputs, the message to be signed and your secret key. The secret key ensures that only you can produce the signature and the fact that it depends on the message means no one can just copy one of your signatures to forge on another message.</p>\n<p>Alongside the function that creates your digital signature, comes a function that verifies your signature is valid. And yup you guessed it, this is where your public key plays a role. The details here are more complicated but in essence, this function returns a value, either true or false indicating whether the signature was created by the secret key associated with your public key. The idea is that it should be completely infeasible to find a valid signature if you don’t know the\nsecret key. That is, there is no better way to forge than just guessing and checking random signatures until you hit one that works.</p>\n<div style = \"display: flex; align-items: center; justify-content: center\">\n    <img src=\"https://i.ibb.co/6n5kDkX/Untitled-Artwork-28.png\" alt=\"signatures\" width=600rem>\n</div>\n<p>With 256 bit signatures, there are 2<sup>256</sup>  possible signatures, and only one is valid. This is a stupidly large number. Consider</p>\n<p>100 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000.</p>\n<p>This number (that is 77 zeros by the way) is still smaller than 2<sup>256</sup>. I think it is safe to say that when you are verifying a signature present on a message with a given public key, it is near impossible for someone to have produced it without knowing the associated secret key. And since George is the only one who knows his secret key, we can be confident George actually signed this message. Perfect! We have now removed a huge dependence on trust from our system. But we are technically still working on an honor system since we need all the friends to actually settle the ledger balances on the agreed upon future date. What’s stopping me from borrowing a bunch of money from my friends, adding the transactions to the ledger and then never showing up to settle with cash?</p>\n<h2>Removing Cash Dependence</h2>\n<p>Before addressing this head on, let's think as to why someone would run off in the first place. Probably because they owe a lot of money. So what if we alter the system so we never actually have to settle up in cash. As long as we have some way to prevent people from spending too much more than they’ve taken, this system should work.</p>\n<p>Let’s quickly illustrate this. Say everyone starts off by paying $100 into the pot. So the first few lines of the ledger would be something like:</p>\n<ul>\n<li>TJ gets $100</li>\n<li>George gets $100</li>\n<li>Quinn gets $100</li>\n<li>etc.</li>\n</ul>\n<p>Now, we just reject any transaction in which someone is spending more than they have on the ledger. Extending the above ledger:</p>\n<ul>\n<li>TJ gets $100</li>\n<li>George gets $100</li>\n<li>Quinn gets $100</li>\n<li>TJ pays George $50</li>\n<li>TJ pays Quinn $50</li>\n</ul>\n<p>So far, all transactions have been signed and verified. Continuing:</p>\n<ul>\n<li>TJ gets $100</li>\n<li>George gets $100</li>\n<li>Quinn gets $100</li>\n<li>TJ pays George $50</li>\n<li>TJ pays Quinn $50</li>\n<li>TJ pays George $25</li>\n</ul>\n<p>Now this last transaction is invalid and would appear as if it was never signed in the first place. Notice that in order for this idea to work, we need to know the full history of the transactions in order to verify that the newly added one is indeed valid. Further notice that with this system the need for real cash is eliminated altogether. In theory, if everyone in the world used this ledger, you could live your whole life sending and receiving money on it. For this reason, we will start calling these quantities <u><strong>ledger dollars</strong></u> or LDs.</p>\n<p>At this point, I think I can lay it out for you guys. Bitcoin, or any other cryptocurrency, is a ledger; that is, the history of the transactions <u><strong>is</strong></u> the currency. So in the above example, the so called LDs would be Bitcoins.</p>\n<h2>How Can We All Come to Consensus?</h2>\n<p>Thus far, our system is stored in some public place like a website. But this requires trusting a central location. Namely, who hosts that website? Who controls the rules of adding new lines?\nTo circumvent this, we’ll have everyone keep their own copy of the ledger. Then to make a transaction like <u><em>Quinn pays George 25 LDs</em></u>, you broadcast it into the world for others to head and record on their own private ledgers. But we can quickly start poking at some issues with this idea. How does everyone agree on what the “right” ledger is? How do we know if everyone has received or heard a broadcasted transaction? If I received 10 LDs from someone, I really want to be sure that everyone heard that because I want to be able to spend those 10 LDs. Even more so, how can we be sure that everyone has recorded the transactions in the same order? If I spent the 10 LDs because on my ledger I had received them first, but on other ledgers I received them after my expenditure, my transaction would be invalid! We have an interesting puzzle on our hands.</p>\n<div style = \"display: flex; align-items: center; justify-content: center\">\n    <img src=\"https://i.ibb.co/9ZT0KdV/Untitled-Artwork-29.png\" alt=\"broadcast\" width=600rem>\n</div>\n<p>Can we come up with a protocol for how to accept or reject transactions and in what order so that we can feel confident that anyone else in the world following the same protocol has a personal ledger that looks the same as yours? This is exactly what the original Bitcoin paper addressed. From a superficial level, the solution that Bitcoin offers is to trust whichever ledger has had the most computational work put into it. This probably doesn't make much sense at the moment, but I’ll try my best to try to explain what is meant by this. The general idea is that if you use computational work as a basis for what to trust, you can make it so that fraudulent transactions and conflicting ledgers would require an infeasible amount of computation to perform said fraud. In order to proceed, I need to introduce something called a <u><strong>cryptographic hash function</strong></u>. In general, a hash function takes in any kind of message or file, and outputs a string of bits with a fixed length, like 256 bits. This output is called the “hash” of the message, and it’s meant to look random. But it’s not random; it always gives the same output for a given input. The most important property of a hash function is that when you slightly change the input, even by just one character, the resulting hash changes completely.</p>\n<div style = \"display: flex; align-items: center; justify-content: center\">\n    <img src=\"https://i.ibb.co/ssV6Gxs/Untitled-Artwork-30.png\" alt=\"sha\" width=600rem>\n</div>\n<p>The “cryptographic” part of a “cryptographic hash function” ensures that reverse engineering the original message from its hash is infeasible, i.e. there is no better method than to guess and check all 2<sup>256</sup> possibilities. A commonly used function that satisfies these criteria is SHA256.</p>\n <div style = \"display: flex; align-items: center; justify-content: center\">\n    <img src=\"https://i.ibb.co/425tWrG/Untitled-Artwork-31.png\" alt=\"shaRev\" width=600rem>\n</div>\n<h2>Proof of Work</h2>\n<p>So how does a cryptographic hash function prove that <u><strong>this</strong></u> list of transactions have undergone a larger amount of computational effort over <u><strong>that</strong></u> list? Imagine someone shows you a list of transactions, and then they say “I found a special number so that when you put this number at the end of the list of transactions, and apply SHA256 to the whole thing, the first 30 bits of the output hash are zeros”. How hard do you think it was for them to find that number? For a random message, the probability that the hash happens to start with 30 successive zeros is 1 in 2<sup>30</sup>, which is about 1 in a billion. Because SHA256 is a cryptographic hash function, the only way to find a special number like this is by guess and check. So this person almost certainly had to go through about a billion different numbers before finding this special one. To verify their claim, you just add their proposed special number to the list they gave you and apply SHA256 to it. You can verify that amount of work was done, without performing the work yourself. This is called <u><strong>proof of work</strong></u>.</p>\n <div style = \"display: flex; align-items: center; justify-content: center\">\n    <img src=\"https://i.ibb.co/fxsGLQx/Untitled-Artwork-33.png\" alt=\"proofOfWork\" width=700rem>\n</div>\n<p>Returning back to the broadcasting of ledger transactions, how are we going to make sure everyone agrees on what the correct ledger really is? With Bitcoin, we trust the ledger that has had the most work put into it. The way this works is to first organize a given ledger into <u><strong>blocks</strong></u>, where each block consists of a list of transactions, together with a proof of work. That is, a special number so that the hash of the whole block starts with a bunch of zeros.</p>\n <div style = \"display: flex; align-items: center; justify-content: center\">\n    <img src=\"https://i.ibb.co/rxF33rp/Untitled-Artwork-32.png\" alt=\"blocks\" width=700rem>\n</div>\n<p>In the same way that a transaction is only considered valid if it is signed by the sender, a block is only considered valid if it has a proof of work. Also, to make sure there is a standard way to order these blocks, we’ll make it so that a block has to contain the hash of the previous block. That way, if you change any block, or try to swap the order of two blocks, it would change the block after it, which changes that block’s hash, which changes the next block, and so on. That would require redoing all the work, finding a new special number for each of these blocks and that’s no fun. Because blocks are chained together like this, instead of calling it a ledger, this is commonly called a <u><strong>blockchain</strong></u>.</p>\n <div style = \"display: flex; align-items: center; justify-content: center\">\n    <img src=\"https://i.ibb.co/fHpXDck/Untitled-Artwork-34.png\" alt=\"blockchain\" width=700rem>\n</div>\n<h2>\"Mining\"</h2>\n<p>In our friend example that was then extended to the rest of the world, we’ll allow anyone to be a <u><strong>block creator</strong></u>. This means that they’ll listen for the transactions being broadcast, collect them into a block, then do a whole bunch of work to find the special number that makes the hash of that block start with many zeros, and broadcast out the block they found. To reward a block creator for all this work, when the block is out together, we’ll allow the creator to include a special transaction at the top which says that they receive, let's says 10 LDs, out of thin air. This is called the block reward. Creating blocks is often called <u><strong>mining</strong></u>, since it requires a lot of work, and it introduces new bits of currency into the economy. From the miners perspective, each block is like a miniature lottery, where everyone is guessing numbers as fast as they can until one lucky individual finds one that makes the hash of the block start with many zeros, and gets rewarded for doing so.</p>\n<h2>Decentralized Consensus</h2>\n<p>So now in our system, we just listen to these blocks being broadcasted by miners and update our personal copy of the ledger / blockchain. If a conflict arises where two different blockchain are broadcasted with conflicting transactions, you defer to the longer one, since it has the most work put into it. But what if they are both the same size? Easy. Just wait until you hear of an additional block that makes one longer. So even though there is no central authority, and everyone is maintaining their own copy of the blockchain, if everyone agrees to give preference to whichever blockchain has the most work put into it, we have a way to arrive at decentralized consensus between everyone in the world.</p>\n<p>I think to really illustrate how this system works and highlight its trustworthiness, let’s run through an example where we try to fool someone. Suppose I want to fool Quinn with a fraudulent block. I could try sending him one that includes a transaction saying I paid him 100 LDs, but then not broadcast it to the rest of the network. That way, Quinn thinks I paid him, and I still have my 100 LDs according to the rest of the network. To do this, I would need to find a valid proof of work before <u><strong>every other miner</strong></u>. And this could happen. But Quinn will still be hearing broadcasts made by other miners, so to keep him believing the fraudulent block, I would have to continue doing all the work to keep adding blocks to this special fork in Bob’s blockchain that’s different from what he’s hearing from the rest of the miners.</p>\n <div style = \"display: flex; align-items: center; justify-content: center\">\n    <img src=\"https://i.ibb.co/zXvJgfF/Untitled-Artwork-35.png\" alt=\"fraud\" width=700rem>\n</div>\n<p>Remember, Quinn will always trust the longest chain he knows about. I may be able to keep this up for a few blocks by chance, continually finding valid proofs of work before all the rest of the miners on the network combined, but it's clear that the probability of maintaining this becomes astronomically miniscule, and in time, Quinn will reject what he’s heard from me in favor of the longer chain that everyone else is working on.</p>\n <div style = \"display: flex; align-items: center; justify-content: center\">\n    <img src=\"https://i.ibb.co/wdQ5cCF/Untitled-Artwork-36.png\" alt=\"consensus\" width=700rem>\n</div>\n<p>Note that this means you shouldn’t necessarily trust a new block that you hear immediately. Instead, you should wait for several new blocks to be added on top of it, and only if you still haven’t heard of any longer blockchains can you trust that this block is part of the same chain everyone else is using.</p>\n<p>And with that we’ve covered, more or less, all the main ideas of cryptocurrency and proof of work systems like Bitcoin. But this is still far from a comprehensive coverage of cryptocurrencies. There are many nuances and alternate design choices I haven’t talked about here, like <u><strong>proof of stake</strong></u>—an alternative to proof of work—but hopefully this provides a good foundation in the topic and serves as a launchpad to further exploration in the space.</p>","categories":["Crypto"],"date":"May 15, 2022","description":"Have you ever wondering what a cryptocurrency really is under the hood? What really is a blockchain, and why we can trust what it says? I present a brief introduction to some of the technical aspects of cryptocurrencies.","id":"38d61bc3-3562-53e9-ba5e-8b69c3c4c4d3","keywords":["Cryptocurrency","Blockchain","Bitcoin","Hash function","Ledger","Trust"],"slug":"/what-is-a-cryptocurrency/","title":"What exactly is a cryptocurrency?","readingTime":{"text":"15 min read"}},"listingPagePath":"/blog"}},
    "staticQueryHashes": ["1094019748","36698639"]}